// /////////////////////////////////////////////////////////////////////////////
// flatten /////////////////////////////////////////////////////////////////////
// /////////////////////////////////////////////////////////////////////////////

function flatten(array) {
  //use reduce method to create an array and push indexes into
  let flat = array.reduce(function(acc, curr){
    //use concat in return to add arrays together
    return acc.concat(curr);
  }, []);
  //return new array
  return flat;
}

// /////////////////////////////////////////////////////////////////////////////
// loop ////////////////////////////////////////////////////////////////////////
// /////////////////////////////////////////////////////////////////////////////

function loop(value, testFunc, updateFunc, bodyFunc) {
  //use for loop to test and update value
  for(let i = value; testFunc(i); i = updateFunc(i)){
    //call the body function
    bodyFunc(i);
  }
}

// /////////////////////////////////////////////////////////////////////////////
// every ///////////////////////////////////////////////////////////////////////
// /////////////////////////////////////////////////////////////////////////////

function every(array, test) {
  //use for loop to access array
  for(let i = 0; i < array.length; i++){
    //if test function is false
    if(test(array[i]) === false){
      return false;
    }
  }
  return true;
}

// /////////////////////////////////////////////////////////////////////////////
// dominantDirection ///////////////////////////////////////////////////////////
// /////////////////////////////////////////////////////////////////////////////

function dominantDirection(str) {
  //create a var ltr as empty array
  let ltr = [];
  //create var rtl as empty array
  let rtl = [];
  //iterate through string with for loop
  for(let i = 0; i < str.length; i++){
    //create var script and use charScript 
    let script = characterScript(str.charCodeAt(i));

    //if script is not null
    if(script !== null){
      if(script.direction === "ltr"){
        ltr.push(script);
      } else {
        rtl.push(script);
      }
    }
  }
  if(ltr.length > rtl.length){
    return "ltr";
  } else{
    return "rtl";
  }

}

// /////////////////////////////////////////////////////////////////////////////
//  //////////////////////////////////////////////////////
// /////////////////////////////////////////////////////////////////////////////

if ((typeof process !== 'undefined') &&
  (typeof process.versions.node !== 'undefined')) {
  module.exports = {
    flatten,
    loop,
    every,
    dominantDirection,
  };
};
